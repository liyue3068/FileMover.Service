// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/server-information.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Protos/server-information.proto</summary>
public static partial class ServerInformationReflection {

  #region Descriptor
  /// <summary>File descriptor for Protos/server-information.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServerInformationReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch9Qcm90b3Mvc2VydmVyLWluZm9ybWF0aW9uLnByb3RvIkcKEVNlcnZlcklu",
          "Zm9ybWF0aW9uEhEKCUlQQWRkcmVzcxgBIAEoCRIMCgRQb3J0GAIgASgFEhEK",
          "CUZyZWVTcGFjZRgDIAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerInformation), global::ServerInformation.Parser, new[]{ "IPAddress", "Port", "FreeSpace" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ServerInformation : pb::IMessage<ServerInformation> {
  private static readonly pb::MessageParser<ServerInformation> _parser = new pb::MessageParser<ServerInformation>(() => new ServerInformation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerInformation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerInformationReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInformation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInformation(ServerInformation other) : this() {
    iPAddress_ = other.iPAddress_;
    port_ = other.port_;
    freeSpace_ = other.freeSpace_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerInformation Clone() {
    return new ServerInformation(this);
  }

  /// <summary>Field number for the "IPAddress" field.</summary>
  public const int IPAddressFieldNumber = 1;
  private string iPAddress_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string IPAddress {
    get { return iPAddress_; }
    set {
      iPAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Port" field.</summary>
  public const int PortFieldNumber = 2;
  private int port_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  /// <summary>Field number for the "FreeSpace" field.</summary>
  public const int FreeSpaceFieldNumber = 3;
  private int freeSpace_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FreeSpace {
    get { return freeSpace_; }
    set {
      freeSpace_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerInformation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerInformation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IPAddress != other.IPAddress) return false;
    if (Port != other.Port) return false;
    if (FreeSpace != other.FreeSpace) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IPAddress.Length != 0) hash ^= IPAddress.GetHashCode();
    if (Port != 0) hash ^= Port.GetHashCode();
    if (FreeSpace != 0) hash ^= FreeSpace.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IPAddress.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(IPAddress);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (FreeSpace != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(FreeSpace);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IPAddress.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IPAddress);
    }
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
    }
    if (FreeSpace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeSpace);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerInformation other) {
    if (other == null) {
      return;
    }
    if (other.IPAddress.Length != 0) {
      IPAddress = other.IPAddress;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    if (other.FreeSpace != 0) {
      FreeSpace = other.FreeSpace;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          IPAddress = input.ReadString();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
        case 24: {
          FreeSpace = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
